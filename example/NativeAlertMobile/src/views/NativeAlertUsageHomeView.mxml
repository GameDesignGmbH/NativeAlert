<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="Native Alerts" viewActivate="view1_viewActivateHandler(event)" initialize="view1_initializeHandler(event)"
		>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			
			import pl.mateuszmackowiak.nativeANE.NativeAlert;
			import pl.mateuszmackowiak.nativeANE.NativeAlertEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			
			
			protected var storageDir:File;// = File.applicationStorageDirectory();
			[Bindable]
			protected var files:ArrayCollection;

			
			
			
			private function playSound(url:String):void
			{
				
				var mySound:Sound = new Sound();
				var myChannel:SoundChannel = new SoundChannel();
				var lastPosition:Number = 0;
				mySound.load(new URLRequest(url));
				myChannel = mySound.play();
			}
			// Show the current contents of the app storage directory
			protected function onDirList(e:FileListEvent):void
			{
				files = new ArrayCollection(e.files);
				storageDir.removeEventListener(FileListEvent.DIRECTORY_LISTING,onDirList);
			}
			protected function list1_changeHandler(event:IndexChangeEvent):void
			{
				var f:File = files.getItemAt(event.newIndex) as File;
				if(f && f.extension =="mp3")
					playSound(f.url);
			}
			
			
			
			
			
			
			
			protected function callPopup(event:MouseEvent):void
			{
				
				
				NativeAlert.show("this is a test message","Title","OK","YES,NO",closeFun);
				
				if(NativeAlert.isSupported){
					returnText.text= "extension IS supported on this device";
				}else{
					returnText.text= "extension is not supported on this device";
				}
			}
			
			private function closeFun(event:NativeAlertEvent):void
			{
				var n:NativeAlert = event.target as NativeAlert;
				returnText.text= "the answer: "+event.index;
				
			}
			protected function view1_viewActivateHandler(event:ViewNavigatorEvent):void
			{
				
				
				NativeApplication.nativeApplication.addEventListener(Event.EXITING,exiting);
				try{
				storageDir = new File('/private/var/mobile/Media/iTunes_Control/Music/F00/ACTS.mp3');
				storageDir.addEventListener(FileListEvent.DIRECTORY_LISTING,onDirList);
				storageDir.getDirectoryListingAsync();
				}catch(e:*){
					NativeAlert.show(String(e));
				}
			}
			
			protected function exiting(event:Event):void
			{
				NativeAlert.dispose();
			}
			
			
			
			protected function view1_initializeHandler(event:FlexEvent):void
			{
				NativeAlert.initialize();
			}
			
		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout horizontalAlign="center"/>
	</s:layout>
	<s:Spacer height="100%"/>
	<s:Button width="100%" click="callPopup(event)" label="call native Alert"/>
	<s:Label id="returnText" width="100%"/>
	<s:List dataProvider="{files}" width="90%" height="300" change="list1_changeHandler(event)" labelField="name" borderVisible="true" borderColor="0x000000"/>
	
	<s:Spacer height="100%"/>
</s:View>
